(function() {
  angular.module('parkKeeper', ['ngResource', 'ngSanitize', 'ngRoute', 'ngAnimate', 'ui.bootstrap', 'swUtils', 'swWebSocket', 'swAuth']).config(function($routeProvider) {
    return $routeProvider.when('/', {
      templateUrl: 'controllers/main.html',
      controller: 'MainCtrl',
      label: ''
    }).when('/login/', {
      templateUrl: 'controllers/login.html',
      controller: 'AuthLoginCtrl',
      label: 'Login'
    }).when('/logout/', {
      templateUrl: 'controllers/logout.html',
      controller: 'AuthLogoutCtrl',
      label: 'Logout'
    });
  }).run(function($location, $rootScope, swTitle) {
    $rootScope.swTitle = swTitle;
    return $rootScope.$on('$routeChangeSuccess', function(event, current, previous) {
      var baseTitle, ref;
      baseTitle = ((ref = current.$$route) != null ? ref.label : void 0) || '';
      swTitle.setTitleBase(baseTitle);
      swTitle.setTitleStart('');
      return swTitle.setTitleEnd('');
    });
  }).config(function(authConfigProvider, config) {
    authConfigProvider.setSystemLabel('parkKeeper');
    authConfigProvider.setServerAddress(config.serverAddress);
    return authConfigProvider.setFreeUrls([]);
  }).config(function($httpProvider) {
    return $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
  });

}).call(this);

(function() {
  angular.module('parkKeeper').constant('config', {
    serverAddress: 'http://127.0.0.1:8000'
  });

}).call(this);

(function() {
  angular.module('parkKeeper').config(function($httpProvider) {
    return $httpProvider.interceptors.push('serverErrorInterceptor');
  }).factory('serverErrorInterceptor', function($location, $q, $log) {
    return {
      responseError: function(response) {
        if (response.status === 0 || (response.status >= 500 && response.status <= 600)) {
          $log.error(response);
        }
        return $q.reject(response);
      }
    };
  });

}).call(this);

(function() {
  angular.module('parkKeeper').controller('MainCtrl', function($scope, $log, swWebSocket) {
    var socket;
    $log.info('MainCtrl ready!');
    socket = new swWebSocket('ws://127.0.0.1:8080/monits');
    socket.onMessage(function(msg) {
      return $log.info('WS', msg);
    });
    socket.start();
    return socket.send('ping');
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hcHAuY29mZmVlIiwiYXBwL2NvbmZpZy5jb2ZmZWUiLCJhcHAvaW50ZXJjZXB0b3JzLmNvZmZlZSIsImFwcC9jb250cm9sbGVycy9tYWluLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFBLE9BQU8sQ0FBQyxNQUFSLENBQWUsWUFBZixFQUE2QixDQUN6QixZQUR5QixFQUV6QixZQUZ5QixFQUd6QixTQUh5QixFQUl6QixXQUp5QixFQU16QixjQU55QixFQVF6QixTQVJ5QixFQVN6QixhQVR5QixFQVV6QixRQVZ5QixDQUE3QixDQWFBLENBQUMsTUFiRCxDQWFRLFNBQUMsY0FBRDtXQUNKLGNBQ0EsQ0FBQyxJQURELENBQ00sR0FETixFQUVFO01BQUEsV0FBQSxFQUFhLHVCQUFiO01BQ0EsVUFBQSxFQUFZLFVBRFo7TUFFQSxLQUFBLEVBQU8sRUFGUDtLQUZGLENBT0EsQ0FBQyxJQVBELENBT00sU0FQTixFQVFJO01BQUEsV0FBQSxFQUFhLHdCQUFiO01BQ0EsVUFBQSxFQUFZLGVBRFo7TUFFQSxLQUFBLEVBQU8sT0FGUDtLQVJKLENBWUEsQ0FBQyxJQVpELENBWU0sVUFaTixFQWFJO01BQUEsV0FBQSxFQUFhLHlCQUFiO01BQ0EsVUFBQSxFQUFZLGdCQURaO01BRUEsS0FBQSxFQUFPLFFBRlA7S0FiSjtFQURJLENBYlIsQ0FnQ0EsQ0FBQyxHQWhDRCxDQWdDSyxTQUFDLFNBQUQsRUFBWSxVQUFaLEVBQXdCLE9BQXhCO0lBQ0QsVUFBVSxDQUFDLE9BQVgsR0FBcUI7V0FDckIsVUFBVSxDQUFDLEdBQVgsQ0FBZSxxQkFBZixFQUFzQyxTQUFDLEtBQUQsRUFBUSxPQUFSLEVBQWlCLFFBQWpCO0FBQ2xDLFVBQUE7TUFBQSxTQUFBLHlDQUEyQixDQUFFLGVBQWpCLElBQTBCO01BQ3RDLE9BQU8sQ0FBQyxZQUFSLENBQXFCLFNBQXJCO01BQ0EsT0FBTyxDQUFDLGFBQVIsQ0FBc0IsRUFBdEI7YUFDQSxPQUFPLENBQUMsV0FBUixDQUFvQixFQUFwQjtJQUprQyxDQUF0QztFQUZDLENBaENMLENBd0NBLENBQUMsTUF4Q0QsQ0F3Q1EsU0FBQyxrQkFBRCxFQUFxQixNQUFyQjtJQUNKLGtCQUFrQixDQUFDLGNBQW5CLENBQWtDLFlBQWxDO0lBQ0Esa0JBQWtCLENBQUMsZ0JBQW5CLENBQW9DLE1BQU0sQ0FBQyxhQUEzQztXQUNBLGtCQUFrQixDQUFDLFdBQW5CLENBQStCLEVBQS9CO0VBSEksQ0F4Q1IsQ0E2Q0EsQ0FBQyxNQTdDRCxDQTZDUSxTQUFDLGFBQUQ7V0FDSixhQUFhLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFLLENBQUEsY0FBQSxDQUFwQyxHQUFzRDtFQURsRCxDQTdDUjtBQUFBOzs7QUNBQTtFQUFBLE9BQU8sQ0FBQyxNQUFSLENBQWUsWUFBZixDQUNJLENBQUMsUUFETCxDQUNjLFFBRGQsRUFDd0I7SUFDaEIsYUFBQSxFQUFlLHVCQURDO0dBRHhCO0FBQUE7OztBQ0FBO0VBQUEsT0FBTyxDQUFDLE1BQVIsQ0FBZSxZQUFmLENBR0EsQ0FBQyxNQUhELENBR1EsU0FBQyxhQUFEO1dBQ0osYUFBYSxDQUFDLFlBQVksQ0FBQyxJQUEzQixDQUFnQyx3QkFBaEM7RUFESSxDQUhSLENBTUEsQ0FBQyxPQU5ELENBTVMsd0JBTlQsRUFNbUMsU0FBQyxTQUFELEVBQVksRUFBWixFQUFnQixJQUFoQjtBQUMzQixXQUFPO01BQ0gsYUFBQSxFQUFlLFNBQUMsUUFBRDtRQUNYLElBQUcsUUFBUSxDQUFDLE1BQVQsS0FBbUIsQ0FBbkIsSUFBd0IsQ0FBQyxRQUFRLENBQUMsTUFBVCxJQUFtQixHQUFuQixJQUEyQixRQUFRLENBQUMsTUFBVCxJQUFtQixHQUEvQyxDQUEzQjtVQUNJLElBQUksQ0FBQyxLQUFMLENBQVcsUUFBWCxFQURKOztBQUlBLGVBQU8sRUFBRSxDQUFDLE1BQUgsQ0FBVSxRQUFWO01BTEksQ0FEWjs7RUFEb0IsQ0FObkM7QUFBQTs7O0FDQUE7RUFBQSxPQUFPLENBQUMsTUFBUixDQUFlLFlBQWYsQ0FDQSxDQUFDLFVBREQsQ0FDWSxVQURaLEVBQ3dCLFNBQUMsTUFBRCxFQUFTLElBQVQsRUFBZSxXQUFmO0FBQ3BCLFFBQUE7SUFBQSxJQUFJLENBQUMsSUFBTCxDQUFVLGlCQUFWO0lBRUEsTUFBQSxHQUFhLElBQUEsV0FBQSxDQUFZLDRCQUFaO0lBQ2IsTUFBTSxDQUFDLFNBQVAsQ0FBaUIsU0FBQyxHQUFEO2FBQ2IsSUFBSSxDQUFDLElBQUwsQ0FBVSxJQUFWLEVBQWdCLEdBQWhCO0lBRGEsQ0FBakI7SUFFQSxNQUFNLENBQUMsS0FBUCxDQUFBO1dBQ0EsTUFBTSxDQUFDLElBQVAsQ0FBWSxNQUFaO0VBUG9CLENBRHhCO0FBQUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ3BhcmtLZWVwZXInLCBbXG4gICAgJ25nUmVzb3VyY2UnXG4gICAgJ25nU2FuaXRpemUnXG4gICAgJ25nUm91dGUnXG4gICAgJ25nQW5pbWF0ZSdcblxuICAgICd1aS5ib290c3RyYXAnXG5cbiAgICAnc3dVdGlscydcbiAgICAnc3dXZWJTb2NrZXQnXG4gICAgJ3N3QXV0aCdcbl0pXG5cbi5jb25maWcgKCRyb3V0ZVByb3ZpZGVyKSAtPlxuICAgICRyb3V0ZVByb3ZpZGVyXG4gICAgLndoZW4oJy8nLFxuICAgICAgdGVtcGxhdGVVcmw6ICdjb250cm9sbGVycy9tYWluLmh0bWwnXG4gICAgICBjb250cm9sbGVyOiAnTWFpbkN0cmwnXG4gICAgICBsYWJlbDogJydcbiAgICApXG5cbiAgICAud2hlbignL2xvZ2luLycsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAnY29udHJvbGxlcnMvbG9naW4uaHRtbCdcbiAgICAgICAgY29udHJvbGxlcjogJ0F1dGhMb2dpbkN0cmwnXG4gICAgICAgIGxhYmVsOiAnTG9naW4nXG4gICAgKVxuICAgIC53aGVuKCcvbG9nb3V0LycsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAnY29udHJvbGxlcnMvbG9nb3V0Lmh0bWwnXG4gICAgICAgIGNvbnRyb2xsZXI6ICdBdXRoTG9nb3V0Q3RybCdcbiAgICAgICAgbGFiZWw6ICdMb2dvdXQnXG4gICAgKVxuXG4ucnVuICgkbG9jYXRpb24sICRyb290U2NvcGUsIHN3VGl0bGUpIC0+XG4gICAgJHJvb3RTY29wZS5zd1RpdGxlID0gc3dUaXRsZVxuICAgICRyb290U2NvcGUuJG9uICckcm91dGVDaGFuZ2VTdWNjZXNzJywgKGV2ZW50LCBjdXJyZW50LCBwcmV2aW91cykgLT5cbiAgICAgICAgYmFzZVRpdGxlID0gY3VycmVudC4kJHJvdXRlPy5sYWJlbCBvciAnJ1xuICAgICAgICBzd1RpdGxlLnNldFRpdGxlQmFzZShiYXNlVGl0bGUpXG4gICAgICAgIHN3VGl0bGUuc2V0VGl0bGVTdGFydCgnJylcbiAgICAgICAgc3dUaXRsZS5zZXRUaXRsZUVuZCgnJylcblxuLmNvbmZpZyAoYXV0aENvbmZpZ1Byb3ZpZGVyLCBjb25maWcpIC0+XG4gICAgYXV0aENvbmZpZ1Byb3ZpZGVyLnNldFN5c3RlbUxhYmVsKCdwYXJrS2VlcGVyJylcbiAgICBhdXRoQ29uZmlnUHJvdmlkZXIuc2V0U2VydmVyQWRkcmVzcyhjb25maWcuc2VydmVyQWRkcmVzcylcbiAgICBhdXRoQ29uZmlnUHJvdmlkZXIuc2V0RnJlZVVybHMoW10pXG5cbi5jb25maWcgKCRodHRwUHJvdmlkZXIpIC0+XG4gICAgJGh0dHBQcm92aWRlci5kZWZhdWx0cy5oZWFkZXJzLnBvc3RbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCciLCJhbmd1bGFyLm1vZHVsZSgncGFya0tlZXBlcicpXG4gICAgLmNvbnN0YW50KCdjb25maWcnLCB7XG4gICAgICAgIHNlcnZlckFkZHJlc3M6ICdodHRwOi8vMTI3LjAuMC4xOjgwMDAnLFxuICAgIH0pIiwiYW5ndWxhci5tb2R1bGUoJ3BhcmtLZWVwZXInKVxuXG4jIGludGVyY2VwdG9yIDUwMCBzdGF0dXMgZXJyb3Jcbi5jb25maWcgKCRodHRwUHJvdmlkZXIpIC0+XG4gICAgJGh0dHBQcm92aWRlci5pbnRlcmNlcHRvcnMucHVzaCgnc2VydmVyRXJyb3JJbnRlcmNlcHRvcicpXG5cbi5mYWN0b3J5ICdzZXJ2ZXJFcnJvckludGVyY2VwdG9yJywgKCRsb2NhdGlvbiwgJHEsICRsb2cpIC0+XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByZXNwb25zZUVycm9yOiAocmVzcG9uc2UpIC0+XG4gICAgICAgICAgICAgICAgaWYgcmVzcG9uc2Uuc3RhdHVzID09IDAgb3IgKHJlc3BvbnNlLnN0YXR1cyA+PSA1MDAgYW5kIHJlc3BvbnNlLnN0YXR1cyA8PSA2MDApXG4gICAgICAgICAgICAgICAgICAgICRsb2cuZXJyb3IocmVzcG9uc2UpXG4jICAgICAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2UgPSByZXNwb25zZS5zdGF0dXNUZXh0IG9yICcnXG4jICAgICAgICAgICAgICAgICAgICB0b2FzdGVyLnBvcCgnZXJyb3InLCAn0J7RiNC40LHQutCwINGB0LXRgNCy0LXRgNCwJywgZXJyb3JNZXNzYWdlKVxuICAgICAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QocmVzcG9uc2UpXG5cbiAgICAgICAgfSIsImFuZ3VsYXIubW9kdWxlKCdwYXJrS2VlcGVyJylcbi5jb250cm9sbGVyICdNYWluQ3RybCcsICgkc2NvcGUsICRsb2csIHN3V2ViU29ja2V0KSAtPlxuICAgICRsb2cuaW5mbyAnTWFpbkN0cmwgcmVhZHkhJ1xuXG4gICAgc29ja2V0ID0gbmV3IHN3V2ViU29ja2V0KCd3czovLzEyNy4wLjAuMTo4MDgwL21vbml0cycpXG4gICAgc29ja2V0Lm9uTWVzc2FnZSAobXNnKSAtPlxuICAgICAgICAkbG9nLmluZm8gJ1dTJywgbXNnXG4gICAgc29ja2V0LnN0YXJ0KClcbiAgICBzb2NrZXQuc2VuZCgncGluZycpXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
