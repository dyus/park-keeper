(function() {
  angular.module('parkKeeper', ['ngResource', 'ngSanitize', 'ngRoute', 'ngAnimate', 'ui.bootstrap', 'swUtils', 'swWebSocket', 'swAuth']).config(function($routeProvider) {
    return $routeProvider.when('/', {
      templateUrl: 'controllers/main.html',
      controller: 'MainCtrl',
      label: ''
    }).when('/login/', {
      templateUrl: 'controllers/login.html',
      controller: 'AuthLoginCtrl',
      label: 'Login'
    }).when('/logout/', {
      templateUrl: 'controllers/logout.html',
      controller: 'AuthLogoutCtrl',
      label: 'Logout'
    });
  }).run(function($location, $rootScope, swTitle) {
    $rootScope.swTitle = swTitle;
    return $rootScope.$on('$routeChangeSuccess', function(event, current, previous) {
      var baseTitle, ref;
      baseTitle = ((ref = current.$$route) != null ? ref.label : void 0) || '';
      swTitle.setTitleBase(baseTitle);
      swTitle.setTitleStart('');
      return swTitle.setTitleEnd('');
    });
  }).config(function(authConfigProvider, config) {
    authConfigProvider.setSystemLabel('parkKeeper');
    authConfigProvider.setServerAddress(config.serverAddress);
    return authConfigProvider.setFreeUrls([]);
  });

}).call(this);

(function() {
  angular.module('parkKeeper').constant('config', {
    serverAddress: 'http://127.0.0.1:8000'
  });

}).call(this);

(function() {
  angular.module('parkKeeper').config(function($httpProvider) {
    return $httpProvider.interceptors.push('serverErrorInterceptor');
  }).factory('serverErrorInterceptor', function($location, $q, $log) {
    return {
      responseError: function(response) {
        if (response.status === 0 || (response.status >= 500 && response.status <= 600)) {
          $log.error(response);
        }
        return $q.reject(response);
      }
    };
  });

}).call(this);

(function() {
  angular.module('parkKeeper').controller('MainCtrl', function($scope, $log, swWebSocket) {
    var socket;
    $log.info('MainCtrl ready!');
    socket = new swWebSocket('ws://127.0.0.1:8080/monits');
    socket.onMessage(function(msg) {
      return $log.info('WS', msg);
    });
    socket.start();
    return socket.send('ping');
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hcHAuY29mZmVlIiwiYXBwL2NvbmZpZy5jb2ZmZWUiLCJhcHAvaW50ZXJjZXB0b3JzLmNvZmZlZSIsImFwcC9jb250cm9sbGVycy9tYWluLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFBLE9BQU8sQ0FBQyxNQUFSLENBQWUsWUFBZixFQUE2QixDQUN6QixZQUR5QixFQUV6QixZQUZ5QixFQUd6QixTQUh5QixFQUl6QixXQUp5QixFQU16QixjQU55QixFQVF6QixTQVJ5QixFQVN6QixhQVR5QixFQVV6QixRQVZ5QixDQUE3QixDQWFBLENBQUMsTUFiRCxDQWFRLFNBQUMsY0FBRDtXQUNKLGNBQ0EsQ0FBQyxJQURELENBQ00sR0FETixFQUVFO01BQUEsV0FBQSxFQUFhLHVCQUFiO01BQ0EsVUFBQSxFQUFZLFVBRFo7TUFFQSxLQUFBLEVBQU8sRUFGUDtLQUZGLENBT0EsQ0FBQyxJQVBELENBT00sU0FQTixFQVFJO01BQUEsV0FBQSxFQUFhLHdCQUFiO01BQ0EsVUFBQSxFQUFZLGVBRFo7TUFFQSxLQUFBLEVBQU8sT0FGUDtLQVJKLENBWUEsQ0FBQyxJQVpELENBWU0sVUFaTixFQWFJO01BQUEsV0FBQSxFQUFhLHlCQUFiO01BQ0EsVUFBQSxFQUFZLGdCQURaO01BRUEsS0FBQSxFQUFPLFFBRlA7S0FiSjtFQURJLENBYlIsQ0FnQ0EsQ0FBQyxHQWhDRCxDQWdDSyxTQUFDLFNBQUQsRUFBWSxVQUFaLEVBQXdCLE9BQXhCO0lBQ0QsVUFBVSxDQUFDLE9BQVgsR0FBcUI7V0FDckIsVUFBVSxDQUFDLEdBQVgsQ0FBZSxxQkFBZixFQUFzQyxTQUFDLEtBQUQsRUFBUSxPQUFSLEVBQWlCLFFBQWpCO0FBQ2xDLFVBQUE7TUFBQSxTQUFBLHlDQUEyQixDQUFFLGVBQWpCLElBQTBCO01BQ3RDLE9BQU8sQ0FBQyxZQUFSLENBQXFCLFNBQXJCO01BQ0EsT0FBTyxDQUFDLGFBQVIsQ0FBc0IsRUFBdEI7YUFDQSxPQUFPLENBQUMsV0FBUixDQUFvQixFQUFwQjtJQUprQyxDQUF0QztFQUZDLENBaENMLENBd0NBLENBQUMsTUF4Q0QsQ0F3Q1EsU0FBQyxrQkFBRCxFQUFxQixNQUFyQjtJQUNKLGtCQUFrQixDQUFDLGNBQW5CLENBQWtDLFlBQWxDO0lBQ0Esa0JBQWtCLENBQUMsZ0JBQW5CLENBQW9DLE1BQU0sQ0FBQyxhQUEzQztXQUNBLGtCQUFrQixDQUFDLFdBQW5CLENBQStCLEVBQS9CO0VBSEksQ0F4Q1I7QUFBQTs7O0FDQUE7RUFBQSxPQUFPLENBQUMsTUFBUixDQUFlLFlBQWYsQ0FDSSxDQUFDLFFBREwsQ0FDYyxRQURkLEVBQ3dCO0lBQ2hCLGFBQUEsRUFBZSx1QkFEQztHQUR4QjtBQUFBOzs7QUNBQTtFQUFBLE9BQU8sQ0FBQyxNQUFSLENBQWUsWUFBZixDQUdBLENBQUMsTUFIRCxDQUdRLFNBQUMsYUFBRDtXQUNKLGFBQWEsQ0FBQyxZQUFZLENBQUMsSUFBM0IsQ0FBZ0Msd0JBQWhDO0VBREksQ0FIUixDQU1BLENBQUMsT0FORCxDQU1TLHdCQU5ULEVBTW1DLFNBQUMsU0FBRCxFQUFZLEVBQVosRUFBZ0IsSUFBaEI7QUFDM0IsV0FBTztNQUNILGFBQUEsRUFBZSxTQUFDLFFBQUQ7UUFDWCxJQUFHLFFBQVEsQ0FBQyxNQUFULEtBQW1CLENBQW5CLElBQXdCLENBQUMsUUFBUSxDQUFDLE1BQVQsSUFBbUIsR0FBbkIsSUFBMkIsUUFBUSxDQUFDLE1BQVQsSUFBbUIsR0FBL0MsQ0FBM0I7VUFDSSxJQUFJLENBQUMsS0FBTCxDQUFXLFFBQVgsRUFESjs7QUFJQSxlQUFPLEVBQUUsQ0FBQyxNQUFILENBQVUsUUFBVjtNQUxJLENBRFo7O0VBRG9CLENBTm5DO0FBQUE7OztBQ0FBO0VBQUEsT0FBTyxDQUFDLE1BQVIsQ0FBZSxZQUFmLENBQ0EsQ0FBQyxVQURELENBQ1ksVUFEWixFQUN3QixTQUFDLE1BQUQsRUFBUyxJQUFULEVBQWUsV0FBZjtBQUNwQixRQUFBO0lBQUEsSUFBSSxDQUFDLElBQUwsQ0FBVSxpQkFBVjtJQUVBLE1BQUEsR0FBYSxJQUFBLFdBQUEsQ0FBWSw0QkFBWjtJQUNiLE1BQU0sQ0FBQyxTQUFQLENBQWlCLFNBQUMsR0FBRDthQUNiLElBQUksQ0FBQyxJQUFMLENBQVUsSUFBVixFQUFnQixHQUFoQjtJQURhLENBQWpCO0lBRUEsTUFBTSxDQUFDLEtBQVAsQ0FBQTtXQUNBLE1BQU0sQ0FBQyxJQUFQLENBQVksTUFBWjtFQVBvQixDQUR4QjtBQUFBIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdwYXJrS2VlcGVyJywgW1xuICAgICduZ1Jlc291cmNlJ1xuICAgICduZ1Nhbml0aXplJ1xuICAgICduZ1JvdXRlJ1xuICAgICduZ0FuaW1hdGUnXG5cbiAgICAndWkuYm9vdHN0cmFwJ1xuXG4gICAgJ3N3VXRpbHMnXG4gICAgJ3N3V2ViU29ja2V0J1xuICAgICdzd0F1dGgnXG5dKVxuXG4uY29uZmlnICgkcm91dGVQcm92aWRlcikgLT5cbiAgICAkcm91dGVQcm92aWRlclxuICAgIC53aGVuKCcvJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnY29udHJvbGxlcnMvbWFpbi5odG1sJ1xuICAgICAgY29udHJvbGxlcjogJ01haW5DdHJsJ1xuICAgICAgbGFiZWw6ICcnXG4gICAgKVxuXG4gICAgLndoZW4oJy9sb2dpbi8nLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ2NvbnRyb2xsZXJzL2xvZ2luLmh0bWwnXG4gICAgICAgIGNvbnRyb2xsZXI6ICdBdXRoTG9naW5DdHJsJ1xuICAgICAgICBsYWJlbDogJ0xvZ2luJ1xuICAgIClcbiAgICAud2hlbignL2xvZ291dC8nLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ2NvbnRyb2xsZXJzL2xvZ291dC5odG1sJ1xuICAgICAgICBjb250cm9sbGVyOiAnQXV0aExvZ291dEN0cmwnXG4gICAgICAgIGxhYmVsOiAnTG9nb3V0J1xuICAgIClcblxuLnJ1biAoJGxvY2F0aW9uLCAkcm9vdFNjb3BlLCBzd1RpdGxlKSAtPlxuICAgICRyb290U2NvcGUuc3dUaXRsZSA9IHN3VGl0bGVcbiAgICAkcm9vdFNjb3BlLiRvbiAnJHJvdXRlQ2hhbmdlU3VjY2VzcycsIChldmVudCwgY3VycmVudCwgcHJldmlvdXMpIC0+XG4gICAgICAgIGJhc2VUaXRsZSA9IGN1cnJlbnQuJCRyb3V0ZT8ubGFiZWwgb3IgJydcbiAgICAgICAgc3dUaXRsZS5zZXRUaXRsZUJhc2UoYmFzZVRpdGxlKVxuICAgICAgICBzd1RpdGxlLnNldFRpdGxlU3RhcnQoJycpXG4gICAgICAgIHN3VGl0bGUuc2V0VGl0bGVFbmQoJycpXG5cbi5jb25maWcgKGF1dGhDb25maWdQcm92aWRlciwgY29uZmlnKSAtPlxuICAgIGF1dGhDb25maWdQcm92aWRlci5zZXRTeXN0ZW1MYWJlbCgncGFya0tlZXBlcicpXG4gICAgYXV0aENvbmZpZ1Byb3ZpZGVyLnNldFNlcnZlckFkZHJlc3MoY29uZmlnLnNlcnZlckFkZHJlc3MpXG4gICAgYXV0aENvbmZpZ1Byb3ZpZGVyLnNldEZyZWVVcmxzKFtdKSIsImFuZ3VsYXIubW9kdWxlKCdwYXJrS2VlcGVyJylcbiAgICAuY29uc3RhbnQoJ2NvbmZpZycsIHtcbiAgICAgICAgc2VydmVyQWRkcmVzczogJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMCcsXG4gICAgfSkiLCJhbmd1bGFyLm1vZHVsZSgncGFya0tlZXBlcicpXG5cbiMgaW50ZXJjZXB0b3IgNTAwIHN0YXR1cyBlcnJvclxuLmNvbmZpZyAoJGh0dHBQcm92aWRlcikgLT5cbiAgICAkaHR0cFByb3ZpZGVyLmludGVyY2VwdG9ycy5wdXNoKCdzZXJ2ZXJFcnJvckludGVyY2VwdG9yJylcblxuLmZhY3RvcnkgJ3NlcnZlckVycm9ySW50ZXJjZXB0b3InLCAoJGxvY2F0aW9uLCAkcSwgJGxvZykgLT5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlc3BvbnNlRXJyb3I6IChyZXNwb25zZSkgLT5cbiAgICAgICAgICAgICAgICBpZiByZXNwb25zZS5zdGF0dXMgPT0gMCBvciAocmVzcG9uc2Uuc3RhdHVzID49IDUwMCBhbmQgcmVzcG9uc2Uuc3RhdHVzIDw9IDYwMClcbiAgICAgICAgICAgICAgICAgICAgJGxvZy5lcnJvcihyZXNwb25zZSlcbiMgICAgICAgICAgICAgICAgICAgIGVycm9yTWVzc2FnZSA9IHJlc3BvbnNlLnN0YXR1c1RleHQgb3IgJydcbiMgICAgICAgICAgICAgICAgICAgIHRvYXN0ZXIucG9wKCdlcnJvcicsICfQntGI0LjQsdC60LAg0YHQtdGA0LLQtdGA0LAnLCBlcnJvck1lc3NhZ2UpXG4gICAgICAgICAgICAgICAgcmV0dXJuICRxLnJlamVjdChyZXNwb25zZSlcblxuICAgICAgICB9IiwiYW5ndWxhci5tb2R1bGUoJ3BhcmtLZWVwZXInKVxuLmNvbnRyb2xsZXIgJ01haW5DdHJsJywgKCRzY29wZSwgJGxvZywgc3dXZWJTb2NrZXQpIC0+XG4gICAgJGxvZy5pbmZvICdNYWluQ3RybCByZWFkeSEnXG5cbiAgICBzb2NrZXQgPSBuZXcgc3dXZWJTb2NrZXQoJ3dzOi8vMTI3LjAuMC4xOjgwODAvbW9uaXRzJylcbiAgICBzb2NrZXQub25NZXNzYWdlIChtc2cpIC0+XG4gICAgICAgICRsb2cuaW5mbyAnV1MnLCBtc2dcbiAgICBzb2NrZXQuc3RhcnQoKVxuICAgIHNvY2tldC5zZW5kKCdwaW5nJylcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
